// Generated by CoffeeScript 1.5.0
(function() {
  var async, browser, read_product, wd;

  async = require('async');

  wd = require('wd');

  browser = wd.remote('phantom-webdriver-001.herokuapp.com', 8910);

  this.best_price = function(model, products) {
    return browser.init(function() {
      return browser.get("http://www.shopmania.es", function() {
        return browser.elementById('autocomplete_prod', function(err, el) {
          return browser.clear(el, function(err) {
            return browser.type(el, model, function(err) {
              return browser.elementByCssSelector('#top_search_row > button', function(err, el) {
                return browser.clickElement(el, function(err) {
                  return browser.takeScreenshot(function(err, img) {
                    return require("fs").writeFile("out.png", img, 'base64', function(err) {
                      return browser.elementsByCssSelector('div.price_row.rowfeat', function(err, els) {
                        return async.map(els, read_product, products);
                      });
                    });
                  });
                });
              });
            });
          });
        });
      });
    });
  };

  read_product = function(row, callback) {
    return async.series({
      shippingPrice: function(callback) {
        return row.elementByCssSelector('p.small.light', function(err, el) {
          if (!err && el) {
            return el.text(callback);
          } else {
            return callback(null);
          }
        });
      },
      itemPrice: function(callback) {
        return row.elementByCssSelector('span.txt_price', function(err, el) {
          if (!err && el) {
            return el.text(callback);
          } else {
            return callback(null);
          }
        });
      },
      urlV: function(callback) {
        return row.elementByCssSelector('div.col_img > p > a > img', function(err, el) {
          if (!err && el) {
            return el.getAttribute('alt', callback);
          } else {
            return callback(null);
          }
        });
      }
    }, callback);
  };

}).call(this);
